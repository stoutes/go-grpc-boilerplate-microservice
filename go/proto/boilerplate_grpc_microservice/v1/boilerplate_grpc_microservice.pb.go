// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: boilerplate_grpc_microservice.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetBoilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoilerName string  `protobuf:"bytes,1,opt,name=boiler_name,json=boilerName,proto3" json:"boiler_name,omitempty"`
	BoilerId   *string `protobuf:"bytes,2,opt,name=boiler_id,json=boilerId,proto3,oneof" json:"boiler_id,omitempty"`
	BoilerStat int32   `protobuf:"varint,3,opt,name=boiler_stat,json=boilerStat,proto3" json:"boiler_stat,omitempty"`
}

func (x *GetBoilerRequest) Reset() {
	*x = GetBoilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boilerplate_grpc_microservice_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoilerRequest) ProtoMessage() {}

func (x *GetBoilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boilerplate_grpc_microservice_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoilerRequest.ProtoReflect.Descriptor instead.
func (*GetBoilerRequest) Descriptor() ([]byte, []int) {
	return file_boilerplate_grpc_microservice_proto_rawDescGZIP(), []int{0}
}

func (x *GetBoilerRequest) GetBoilerName() string {
	if x != nil {
		return x.BoilerName
	}
	return ""
}

func (x *GetBoilerRequest) GetBoilerId() string {
	if x != nil && x.BoilerId != nil {
		return *x.BoilerId
	}
	return ""
}

func (x *GetBoilerRequest) GetBoilerStat() int32 {
	if x != nil {
		return x.BoilerStat
	}
	return 0
}

type Boiler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoilerId   string  `protobuf:"bytes,1,opt,name=boiler_id,json=boilerId,proto3" json:"boiler_id,omitempty"`
	BoilerTemp float32 `protobuf:"fixed32,2,opt,name=boiler_temp,json=boilerTemp,proto3" json:"boiler_temp,omitempty"`
}

func (x *Boiler) Reset() {
	*x = Boiler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boilerplate_grpc_microservice_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Boiler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Boiler) ProtoMessage() {}

func (x *Boiler) ProtoReflect() protoreflect.Message {
	mi := &file_boilerplate_grpc_microservice_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Boiler.ProtoReflect.Descriptor instead.
func (*Boiler) Descriptor() ([]byte, []int) {
	return file_boilerplate_grpc_microservice_proto_rawDescGZIP(), []int{1}
}

func (x *Boiler) GetBoilerId() string {
	if x != nil {
		return x.BoilerId
	}
	return ""
}

func (x *Boiler) GetBoilerTemp() float32 {
	if x != nil {
		return x.BoilerTemp
	}
	return 0
}

type GetBoilerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boiler *Boiler `protobuf:"bytes,1,opt,name=boiler,proto3" json:"boiler,omitempty"`
}

func (x *GetBoilerResponse) Reset() {
	*x = GetBoilerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boilerplate_grpc_microservice_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBoilerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBoilerResponse) ProtoMessage() {}

func (x *GetBoilerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boilerplate_grpc_microservice_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBoilerResponse.ProtoReflect.Descriptor instead.
func (*GetBoilerResponse) Descriptor() ([]byte, []int) {
	return file_boilerplate_grpc_microservice_proto_rawDescGZIP(), []int{2}
}

func (x *GetBoilerResponse) GetBoiler() *Boiler {
	if x != nil {
		return x.Boiler
	}
	return nil
}

type CreateBoilerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Boiler *Boiler `protobuf:"bytes,1,opt,name=boiler,proto3" json:"boiler,omitempty"`
}

func (x *CreateBoilerRequest) Reset() {
	*x = CreateBoilerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boilerplate_grpc_microservice_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBoilerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBoilerRequest) ProtoMessage() {}

func (x *CreateBoilerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_boilerplate_grpc_microservice_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBoilerRequest.ProtoReflect.Descriptor instead.
func (*CreateBoilerRequest) Descriptor() ([]byte, []int) {
	return file_boilerplate_grpc_microservice_proto_rawDescGZIP(), []int{3}
}

func (x *CreateBoilerRequest) GetBoiler() *Boiler {
	if x != nil {
		return x.Boiler
	}
	return nil
}

type CreateBoilerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoilerId string `protobuf:"bytes,1,opt,name=boiler_id,json=boilerId,proto3" json:"boiler_id,omitempty"`
}

func (x *CreateBoilerResponse) Reset() {
	*x = CreateBoilerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_boilerplate_grpc_microservice_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBoilerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBoilerResponse) ProtoMessage() {}

func (x *CreateBoilerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_boilerplate_grpc_microservice_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBoilerResponse.ProtoReflect.Descriptor instead.
func (*CreateBoilerResponse) Descriptor() ([]byte, []int) {
	return file_boilerplate_grpc_microservice_proto_rawDescGZIP(), []int{4}
}

func (x *CreateBoilerResponse) GetBoilerId() string {
	if x != nil {
		return x.BoilerId
	}
	return ""
}

var File_boilerplate_grpc_microservice_proto protoreflect.FileDescriptor

var file_boilerplate_grpc_microservice_proto_rawDesc = []byte{
	0x0a, 0x23, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x22, 0x84, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42,
	0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x09, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x08, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x46,
	0x0a, 0x06, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x69, 0x6c,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x69,
	0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x5f,
	0x74, 0x65, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x6f, 0x69, 0x6c,
	0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x22, 0x55, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x69,
	0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x62,
	0x6f, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f,
	0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x06, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x22, 0x57, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x06, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x06,
	0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x32, 0x8d, 0x02, 0x0a, 0x12,
	0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x76, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12,
	0x32, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72,
	0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x0c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x12, 0x35, 0x2e, 0x62, 0x6f, 0x69,
	0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x36, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x69, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x5f, 0x5a, 0x5d, 0x62,
	0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x62, 0x6f, 0x69,
	0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_boilerplate_grpc_microservice_proto_rawDescOnce sync.Once
	file_boilerplate_grpc_microservice_proto_rawDescData = file_boilerplate_grpc_microservice_proto_rawDesc
)

func file_boilerplate_grpc_microservice_proto_rawDescGZIP() []byte {
	file_boilerplate_grpc_microservice_proto_rawDescOnce.Do(func() {
		file_boilerplate_grpc_microservice_proto_rawDescData = protoimpl.X.CompressGZIP(file_boilerplate_grpc_microservice_proto_rawDescData)
	})
	return file_boilerplate_grpc_microservice_proto_rawDescData
}

var file_boilerplate_grpc_microservice_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_boilerplate_grpc_microservice_proto_goTypes = []interface{}{
	(*GetBoilerRequest)(nil),     // 0: boilerplate_grpc_microservice_v1.GetBoilerRequest
	(*Boiler)(nil),               // 1: boilerplate_grpc_microservice_v1.Boiler
	(*GetBoilerResponse)(nil),    // 2: boilerplate_grpc_microservice_v1.GetBoilerResponse
	(*CreateBoilerRequest)(nil),  // 3: boilerplate_grpc_microservice_v1.CreateBoilerRequest
	(*CreateBoilerResponse)(nil), // 4: boilerplate_grpc_microservice_v1.CreateBoilerResponse
}
var file_boilerplate_grpc_microservice_proto_depIdxs = []int32{
	1, // 0: boilerplate_grpc_microservice_v1.GetBoilerResponse.boiler:type_name -> boilerplate_grpc_microservice_v1.Boiler
	1, // 1: boilerplate_grpc_microservice_v1.CreateBoilerRequest.boiler:type_name -> boilerplate_grpc_microservice_v1.Boiler
	0, // 2: boilerplate_grpc_microservice_v1.BoilerplateService.GetBoiler:input_type -> boilerplate_grpc_microservice_v1.GetBoilerRequest
	3, // 3: boilerplate_grpc_microservice_v1.BoilerplateService.CreateBoiler:input_type -> boilerplate_grpc_microservice_v1.CreateBoilerRequest
	2, // 4: boilerplate_grpc_microservice_v1.BoilerplateService.GetBoiler:output_type -> boilerplate_grpc_microservice_v1.GetBoilerResponse
	4, // 5: boilerplate_grpc_microservice_v1.BoilerplateService.CreateBoiler:output_type -> boilerplate_grpc_microservice_v1.CreateBoilerResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_boilerplate_grpc_microservice_proto_init() }
func file_boilerplate_grpc_microservice_proto_init() {
	if File_boilerplate_grpc_microservice_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_boilerplate_grpc_microservice_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boilerplate_grpc_microservice_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Boiler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boilerplate_grpc_microservice_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBoilerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boilerplate_grpc_microservice_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBoilerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_boilerplate_grpc_microservice_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBoilerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_boilerplate_grpc_microservice_proto_msgTypes[0].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_boilerplate_grpc_microservice_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_boilerplate_grpc_microservice_proto_goTypes,
		DependencyIndexes: file_boilerplate_grpc_microservice_proto_depIdxs,
		MessageInfos:      file_boilerplate_grpc_microservice_proto_msgTypes,
	}.Build()
	File_boilerplate_grpc_microservice_proto = out.File
	file_boilerplate_grpc_microservice_proto_rawDesc = nil
	file_boilerplate_grpc_microservice_proto_goTypes = nil
	file_boilerplate_grpc_microservice_proto_depIdxs = nil
}
